(function(){

    var unikong = new Unikong();

    describe('count', function () {

        it('surrogatepair', function () {
            expect(unikong.count('°â¥°â¥°â¥\n„ÅÇ°â¥')).toBe(6);
        });

        it('number + hiragana', function () {
            expect(unikong.count('123456789„ÅÇ')).toBe(10);
        });

    });

    describe('toUnicodeLiteral', function() {

        it('alpha', function() {
            expect(unikong.toUnicodeLiteral('abc')).toBe('\\u0061\\u0062\\u0063');
        });

    });

    describe('normalizeLinebreak', function() {

        it('to \\n', function() {
            expect(unikong.normalizeLinebreak('aa\raa')).toBe('aa\naa');
            expect(unikong.normalizeLinebreak('aa\r\naa','\n')).toBe('aa\naa');
        });

        it('to \\r', function() {
            expect(unikong.normalizeLinebreak('aa\r\na\na', '\r')).toBe('aa\ra\ra');
            expect(unikong.normalizeLinebreak('aa\na\r\n\r\na', '\r')).toBe('aa\ra\r\ra');
        });

        it('to \\r\\n', function() {
            expect(unikong.normalizeLinebreak('aa\r\naa', '\r\n')).toBe('aa\r\naa');
            expect(unikong.normalizeLinebreak('aa\na\r\n\r\na', '\r\n')).toBe('aa\r\na\r\n\r\na');
        });

    });

    describe('stripSurrogatePair', function() {

        it('surrogatepair', function() {
            expect(unikong.stripSurrogatePair('123°â¥°ßÉ456')).toBe('123456');
            expect(unikong.stripSurrogatePair('_ABCÈæ†°â¥°ßÉÔº†Ôºä')).toBe('_ABCÈæ†Ôº†Ôºä');
            expect(unikong.stripSurrogatePair('°â¥°â¥°ßÉ456°â¥°â¥°â¥', '‚ñ°')).toBe('‚ñ°‚ñ°‚ñ°456‚ñ°‚ñ°‚ñ°');
        });

        it('number', function() {
            expect(unikong.stripSurrogatePair('123456')).toBe('123456');
        });

        it('hiragana', function() {
            expect(unikong.stripSurrogatePair('„ÅÇ„ÅÑ„ÅÜ')).toBe('„ÅÇ„ÅÑ„ÅÜ');
        });

    });

    describe('stripUnicode6Emoji', function() {

        it('empty', function() {
            expect(unikong.stripUnicode6Emoji('üòÄ')).toBe('');
            expect(unikong.stripUnicode6Emoji('\u2195\uFE0F\u0032\uFE0F\u20E3\u274C')).toBe('');
            expect(unikong.stripUnicode6Emoji('\uD83D\uDC40\uD83D\uDC4D\uD83D\uDE8C\uD83D\uDCBF\u2195\uFE0F\u0032\uFE0F\u20E3\u274C')).toBe('');
        });

        it('number', function() {
            expect(unikong.stripUnicode6Emoji('0üåä1')).toBe('01');
        });

        it('surrogatepair', function() {
            expect(unikong.stripUnicode6Emoji('°â¥üê∞°â¥')).toBe('°â¥°â¥');
        });

    });

    describe('isAlpha', function() {

        it('to be truthy.', function() {
            expect(unikong.isAlpha('abcZ')).toBe(true);
            expect(unikong.isAlpha('abcZ„ÅÇ')).toBe(false);
            expect(unikong.isAlpha('Ôº°Ôº¢Ôº£Ôº∫')).toBe(true);
            expect(unikong.isAlpha('aaaaaa')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isAlpha('„ÅÇ„ÅÑ„ÅÜ')).toBe(false);
            expect(unikong.isAlpha('1A')).toBe(false);
        });

    });

    describe('isNumeric', function() {

        it('to be truthy.', function() {
            expect(unikong.isNumeric('012345')).toBe(true);
            expect(unikong.isNumeric('01233333')).toBe(true);
            expect(unikong.isNumeric('ÔºêÔºëÔºíÔºìÔºîÔºï')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isNumeric('Ôºê„ÅÇ')).toBe(false);
            expect(unikong.isNumeric('1A')).toBe(false);
        });

    });

    describe('isAlphaNumeric', function() {

        it('to be truthy.', function() {
            expect(unikong.isAlphaNumeric('012ABZ')).toBe(true);
            expect(unikong.isAlphaNumeric('ÔºêÔºëÔºíaÔºîÔºïÔº∫')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isAlphaNumeric('Ôºê„ÅÇ')).toBe(false);
            expect(unikong.isAlphaNumeric('1A_')).toBe(false);
        });

    });

    describe('isAscii', function() {

        it('to be truthy.', function() {
            expect(unikong.isAscii('012ABZ')).toBe(true);
            expect(unikong.isAscii('1A!?-)_')).toBe(true);

        });

        it('to be falsy.', function() {
            expect(unikong.isAscii('Ôºê„ÅÇ')).toBe(false);
            expect(unikong.isAscii('ÔºêÔºëÔºíaÔºîÔºïÔº∫')).toBe(false);
        });

    });

    describe('isHiragana', function() {

        it('to be truthy.', function() {
            expect(unikong.isHiragana('„ÅÑ„Çç„ÅØ')).toBe(true);
            expect(unikong.isHiragana('„ÅÇ„Çè„Çí„Çì')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isHiragana('1A_-?!')).toBe(false);
            expect(unikong.isHiragana('„Ç¢„É≤')).toBe(false);
        });

    });

    describe('isKatakana', function() {

        it('to be truthy.', function() {
            expect(unikong.isKatakana('„Ç¢„É≤')).toBe(true);
            expect(unikong.isKatakana('„Ç∂„Ç¨„Éù„Éâ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isKatakana('09')).toBe(false);
            expect(unikong.isKatakana('AZ')).toBe(false);
            expect(unikong.isKatakana('„ÅÇ„Çí')).toBe(false);
        });

    });

    describe('isHankana', function() {

        it('to be truthy.', function() {
            expect(unikong.isHankana('ÔΩ±')).toBe(true);
            expect(unikong.isHankana('ÔΩ≤ÔΩ¶Ôæù')).toBe(true);
            expect(unikong.isHankana('ÔΩªÔæûÔΩºÔæûÔæÇÔæû')).toBe(true);
            expect(unikong.isHankana('ÔΩ¨ÔΩ≠ÔΩÆ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isHankana('09')).toBe(false);
            expect(unikong.isHankana('AZ')).toBe(false);
            expect(unikong.isHankana('„ÅÇ„Çí')).toBe(false);
            expect(unikong.isHankana('„Ç¢„É≤')).toBe(false);
            expect(unikong.isHankana('„Ç∂„Ç¨„Éù„Éâ')).toBe(false);
        });

    });

    describe('isHalfWidth', function() {

        it('to be truthy.', function() {
            expect(unikong.isHalfWidth('ÔΩ±')).toBe(true);
            expect(unikong.isHalfWidth('ÔΩªÔæûÔΩºÔæûÔæÇÔæû')).toBe(true);
            expect(unikong.isHalfWidth('ÔΩ¨ÔΩ≠ÔΩÆ_-[')).toBe(true);
            expect(unikong.isHalfWidth('A09Z@')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isHalfWidth('„ÅÇ„Çí')).toBe(false);
            expect(unikong.isHalfWidth('„Ç¢„É≤')).toBe(false);
            expect(unikong.isHalfWidth('„ÉºÔº†')).toBe(false);
        });

    });

    describe('isFullWidth', function() {

        it('to be truthy.', function() {
            expect(unikong.isFullWidth('„ÅÇ„Çí')).toBe(true);
            expect(unikong.isFullWidth('„Ç¢„É≤')).toBe(true);
            expect(unikong.isFullWidth('„ÉºÔº†')).toBe(true);
            expect(unikong.isFullWidth('ÂçóÁÑ°ÈòøÂº•ÈôÄ‰ªè')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isFullWidth('ÔΩ±')).toBe(false);
            expect(unikong.isFullWidth('ÔΩªÔæûÔΩºÔæûÔæÇÔæû')).toBe(false);
            expect(unikong.isFullWidth('ÔΩ¨ÔΩ≠ÔΩÆ_-[')).toBe(false);
            expect(unikong.isFullWidth('A09Z@')).toBe(false);
        });

    });

    describe('isLineBreak', function() {

        it('to be truthy.', function() {
//            expect(unikong.isLineBreak('\n')).toBe(true);
            expect(unikong.isLineBreak('\r\n')).toBe(true);
        });

//        it('to be falsy.', function() {
//            expect(unikong.isLineBreak('A\nB')).toBe(false);
//            expect(unikong.isLineBreak('\t')).toBe(false);
//        });

    });

    describe('isCyrillic', function() {

        it('to be truthy.', function() {
            expect(unikong.isCyrillic('–ë–î–ë')).toBe(true);
            expect(unikong.isCyrillic('–£—Ä–∞–∞–∞–∞–∞–∞–∞')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isCyrillic('„ÅÇ„Çí')).toBe(false);
            expect(unikong.isCyrillic('Ypa')).toBe(false);
        });

    });

    describe('isBlank', function() {

        it('to be truthy.', function() {
            expect(unikong.isBlank('\t')).toBe(true);
            expect(unikong.isBlank('„ÄÄ')).toBe(true);
            expect(unikong.isBlank('\n')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isBlank('_')).toBe(false);
            expect(unikong.isBlank('1 a')).toBe(false);
        });

    });

    describe('isContralCode', function() {

        it('to be truthy.', function() {
            expect(unikong.isContralCode('\u0000\u007F')).toBe(true);
            expect(unikong.isContralCode('\u0005')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isContralCode('_-')).toBe(false);
            expect(unikong.isContralCode(' ')).toBe(false);
        });

    });

    describe('isPageBreak', function() {

        it('to be truthy.', function() {
            expect(unikong.isPageBreak('\f')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isPageBreak('\r')).toBe(false);
            expect(unikong.isPageBreak('\t')).toBe(false);
        });

    });

    describe('isOpeningBracket', function() {

        it('to be truthy.', function() {
            expect(unikong.isOpeningBracket('„Äå')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isOpeningBracket('„Äç')).toBe(false);
        });

    });

    describe('isClosingBracket', function() {

        it('to be truthy.', function() {
            expect(unikong.isClosingBracket(']')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isClosingBracket('[')).toBe(false);
        });

    });

    describe('isHyphen', function() {

        it('to be truthy.', function() {
            expect(unikong.isHyphen('-')).toBe(true);
            expect(unikong.isHyphen('„Äú')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isHyphen('Ôºù')).toBe(false);
        });

    });

    describe('isPunctuation', function() {

        it('to be truthy.', function() {
            expect(unikong.isPunctuation('„ÄÅ')).toBe(true);
            expect(unikong.isPunctuation('„ÄÇ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isHyphen('Ôºä')).toBe(false);
        });

    });

    describe('isEllipsis', function() {

        it('to be truthy.', function() {
            expect(unikong.isEllipsis('‚Ä¶')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isEllipsis('„Éª„Éª„Éª')).toBe(false);
        });

    });

    describe('isNotPermittedStart', function() {

        it('to be truthy.', function() {
            expect(unikong.isNotPermittedStart('Ôºü')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isNotPermittedStart('Ôºà')).toBe(false);
        });

    });

    describe('isNotPermittedEnd', function() {

        it('to be truthy.', function() {
            expect(unikong.isNotPermittedEnd('Ôºà')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isNotPermittedEnd('ÔºÅ')).toBe(false);
        });

    });

    describe('isSurrogatePair', function() {

        it('to be truthy.', function() {
            expect(unikong.isSurrogatePair('°µÖ')).toBe(true);
            expect(unikong.isSurrogatePair('°â¥°ßÉ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isSurrogatePair('Â∑ù')).toBe(false);
            expect(unikong.isSurrogatePair('Èæ†°ºû')).toBe(false);
        });

    });


    describe('isUnicode6Emoji', function() {

        it('to be truthy.', function() {
            expect(unikong.isUnicode6Emoji('\uD83D\uDE01')).toBe(true);
            expect(unikong.isUnicode6Emoji('\uD83D\uDEC0')).toBe(true);
            expect(unikong.isUnicode6Emoji('\uD83C\uDDEF')).toBe(true);
            expect(unikong.isUnicode6Emoji('\u2702')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.isUnicode6Emoji('Ôº†')).toBe(false);
            expect(unikong.isUnicode6Emoji('‚ò≠')).toBe(false);
        });
    });

    describe('hasAlpha', function() {

        it('to be truthy.', function() {
            expect(unikong.hasAlpha('1A')).toBe(true);
            expect(unikong.hasAlpha('Ôº°Ôº¢Ôº£Ôº∫')).toBe(true);
            expect(unikong.hasAlpha('1A')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasAlpha('„ÅÇ„ÅÑ„ÅÜ')).toBe(false);
            expect(unikong.hasAlpha('„ÉØ„É≤„É≥')).toBe(false);
        });

    });

    describe('hasNumeric', function() {

        it('to be truthy.', function() {
            expect(unikong.hasNumeric('012345')).toBe(true);
            expect(unikong.hasNumeric('ÔºêÔºëÔºíÔºìÔºîÔºï')).toBe(true);
            expect(unikong.hasNumeric('1A')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasNumeric('„ÅÇ')).toBe(false);
            expect(unikong.hasNumeric('-^_<>')).toBe(false);    });

    });

    describe('hasAlphaNumeric', function() {

        it('to be truthy.', function() {
            expect(unikong.hasAlphaNumeric('Ôºê„ÅÇ')).toBe(true);
            expect(unikong.hasAlphaNumeric('1a\nA_')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasAlphaNumeric('„ÅÇÔºø')).toBe(false);
        });

    });

    describe('hasAscii', function() {

        it('to be truthy.', function() {
            expect(unikong.hasAscii('„ÅÇ01A„Çì')).toBe(true);
            expect(unikong.hasAscii('ÂçóÁÑ°ÈòøÂº•ÈôÄ‰ªè_')).toBe(true);
            expect(unikong.hasAscii('1A!?-)_')).toBe(true);
            expect(unikong.hasAscii('ÔºêÔºëÔºí_ÔºîÔºïÔº∫')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasAscii('Ôºê„ÅÇ')).toBe(false);
            expect(unikong.hasAscii('ÔºêÔºëÔºíÔºøÔºîÔºïÔº∫')).toBe(false);
        });

    });

    describe('hasHiragana', function() {

        it('to be truthy.', function() {
            expect(unikong.hasHiragana('„ÅÑ„Çç„ÅØ„Ç¢„Ç¶„Ç™')).toBe(true);
            expect(unikong.hasHiragana('„ÅÇ„Çè„Çí„Çì„Ç´„Ç≠„ÉØ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasHiragana('1A_-?!')).toBe(false);
            expect(unikong.hasHiragana('„Ç¢„É≤')).toBe(false);
        });

    });

    describe('hasKatakana', function() {

        it('to be truthy.', function() {
            expect(unikong.hasKatakana('„Ç¢„ÅÇ„É≤„Çí')).toBe(true);
            expect(unikong.hasKatakana('„Åã„Ç¨ÔΩ∂Ôæû')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasKatakana('0A')).toBe(false);
            expect(unikong.hasKatakana('ÔæúÔΩ¶Ôæù')).toBe(false);
            expect(unikong.hasKatakana('„ÅÇ„Çí')).toBe(false);
        });

    });

    describe('hasHankana', function() {

        it('to be truthy.', function() {
            expect(unikong.hasHankana('ÔΩ±„ÅÇÔΩ¶Ôæù')).toBe(true);
            expect(unikong.hasHankana('ÔΩªÔæûÔΩºÔæûÔæÇÔæû')).toBe(true);
            expect(unikong.hasHankana('ÔΩ¨ÔΩ≠ÔΩÆabcdez')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasHankana('09')).toBe(false);
            expect(unikong.hasHankana('AZ')).toBe(false);
            expect(unikong.hasHankana('„ÅÇ„Çí')).toBe(false);
            expect(unikong.hasHankana('„Ç¢„É≤')).toBe(false);
            expect(unikong.hasHankana('„Ç∂„Ç¨„Éù„Éâ')).toBe(false);
        });

    });

    describe('hasHalfWidth', function() {

        it('to be truthy.', function() {
            expect(unikong.hasHalfWidth('ÔΩ±„ÅÇ')).toBe(true);
            expect(unikong.hasHalfWidth('ÔΩªÔæûÔΩºÔæûÔæÇÔæû„Çº„Çæ')).toBe(true);
            expect(unikong.hasHalfWidth('ÂçóÁÑ°ÈòøÂº•ÈôÄ‰ªè12345')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasHalfWidth('„ÅÇ„Çí')).toBe(false);
            expect(unikong.hasHalfWidth('–£—Ä–∞')).toBe(false);
            expect(unikong.hasHalfWidth('„ÉºÔº†')).toBe(false);
        });

    });

    describe('hasFullWidth', function() {

        it('to be truthy.', function() {
            expect(unikong.hasFullWidth('A„ÅÇ')).toBe(true);
            expect(unikong.hasFullWidth('Ôº°„Ç¢')).toBe(true);
            expect(unikong.hasFullWidth('ÂçóÁÑ°ÈòøÂº•ÈôÄ‰ªè123')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasFullWidth('ÔΩ±')).toBe(false);
            expect(unikong.hasFullWidth('ÔΩªÔæûÔΩºÔæûÔæÇÔæû')).toBe(false);
            expect(unikong.hasFullWidth('ÔΩ¨ÔΩ≠ÔΩÆ_-[')).toBe(false);
            expect(unikong.hasFullWidth('A09Z@')).toBe(false);
        });

    });

//    describe('hasLineBreak', function() {
//
//        it('to be truthy.', function() {
//            expect(unikong.hasLineBreak('\n')).toBe(true);
//            expect(unikong.hasLineBreak('\r\n')).toBe(true);
//            expect(unikong.hasLineBreak('A\nB')).toBe(true);
//        });
//
//        it('to be falsy.', function() {
//            expect(unikong.hasLineBreak('\t')).toBe(false);
//        });
//
//    });

    describe('hasCyrillic', function() {

        it('to be truthy.', function() {
            expect(unikong.hasCyrillic('–ë–î–ë')).toBe(true);
            expect(unikong.hasCyrillic('–£—Ä–∞–∞–∞–∞–∞–∞–∞')).toBe(true);
            expect(unikong.hasCyrillic('–£Y')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasCyrillic('„ÅÇ„Çí')).toBe(false);
            expect(unikong.hasCyrillic('Ypa')).toBe(false);
        });

    });

    describe('hasBlank', function() {

        it('to be truthy.', function() {
            expect(unikong.hasBlank('1\t0')).toBe(true);
            expect(unikong.hasBlank('1„ÄÄ9')).toBe(true);
            expect(unikong.hasBlank('2\n5')).toBe(true);
            expect(unikong.hasBlank('1 a')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasBlank('4_')).toBe(false);
            expect(unikong.hasBlank('1020304050')).toBe(false);
        });

    });

    describe('hasContralCode', function() {

        it('to be truthy.', function() {
            expect(unikong.hasContralCode('\u0000„Äú\u007F')).toBe(true);
            expect(unikong.hasContralCode('\u0005„Äú')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasContralCode('_-„Äú')).toBe(false);
            expect(unikong.hasContralCode(' „Äú')).toBe(false);
        });

    });

    describe('hasPageBreak', function() {

        it('to be truthy.', function() {
            expect(unikong.hasPageBreak('„ÅÇ\f„ÅÜ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasPageBreak('„ÅÇ\r„ÅÜ')).toBe(false);
            expect(unikong.hasPageBreak('„ÅÇ\t„ÅÜ')).toBe(false);
        });

    });

    describe('hasOpeningBracket', function() {

        it('to be truthy.', function() {
            expect(unikong.hasOpeningBracket('„Äå„ÅØ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasOpeningBracket('„ÅØ„Äç')).toBe(false);
        });

    });

    describe('hasClosingBracket', function() {

        it('to be truthy.', function() {
            expect(unikong.hasClosingBracket('„Çì]')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasClosingBracket('[„Çì')).toBe(false);
        });

    });

    describe('hasHyphen', function() {

        it('to be truthy.', function() {
            expect(unikong.hasHyphen('-Ôºù')).toBe(true);
            expect(unikong.hasHyphen('„ÄúÔºù')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasHyphen('ÔºùÔºù')).toBe(false);
        });

    });

    describe('hasPunctuation', function() {

        it('to be truthy.', function() {
            expect(unikong.hasPunctuation('Ôºã„ÄÅ')).toBe(true);
            expect(unikong.hasPunctuation('Ôºã„ÄÇ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasPunctuation('ÔºãÔºä')).toBe(false);
        });

    });

    describe('hasEllipsis', function() {

        it('to be truthy.', function() {
            expect(unikong.hasEllipsis('„Åä‚Ä¶')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasEllipsis('„Åä„Éª„Éª„Éª')).toBe(false);
        });

    });

    describe('hasNotPermittedStart', function() {

        it('to be truthy.', function() {
            expect(unikong.hasNotPermittedStart('„ÅÇÔºÅ')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasNotPermittedStart('„ÅÇÔºà')).toBe(false);
        });

    });

    describe('hasNotPermittedEnd', function() {

        it('to be truthy.', function() {
            expect(unikong.hasNotPermittedEnd('Ôº†Ôºà')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasNotPermittedEnd('Ôº†Ôºü')).toBe(false);
        });

    });

    describe('hasSurrogatePair', function() {

        it('to be truthy.', function() {
            expect(unikong.hasSurrogatePair('°µÖ')).toBe(true);
            expect(unikong.hasSurrogatePair('°â¥°ßÉ')).toBe(true);
            expect(unikong.hasSurrogatePair('Èæ†°ºû')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasSurrogatePair('Èæ†')).toBe(false);
            expect(unikong.hasSurrogatePair('ÂçóÁÑ°ÈòøÂº•ÈôÄ‰ªè')).toBe(false);
        });

    });

    describe('hasUnicode6Emoji', function() {

        it('to be truthy.', function() {
            expect(unikong.hasUnicode6Emoji('\uD83D\uDE01')).toBe(true);
            expect(unikong.hasUnicode6Emoji('\uD83D\uDEC0')).toBe(true);
            expect(unikong.hasUnicode6Emoji('\uD83C\uDDEF')).toBe(true);
            expect(unikong.hasUnicode6Emoji('\u2702')).toBe(true);
        });

        it('to be falsy.', function() {
            expect(unikong.hasUnicode6Emoji('Ôº†')).toBe(false);
            expect(unikong.hasUnicode6Emoji('‚ò≠')).toBe(false);
        });
    });

})();